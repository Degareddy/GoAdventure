::ng-deep .mat-form-field-wrapper {
    margin-bottom: -1em !important;
    margin-top: -0.2em !important;
  }
  ::ng-deep .mat-form-field-flex > .mat-form-field-infix {  padding: 0.4em 0px !important;
  }
  
  ::ng-deep .mat-form-field-label-wrapper {
    top: -1.5em;
  }
  
  ::ng-deep
    .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float
    .mat-form-field-label {
    transform: translateY(-1.1em) scale(0.75);
    width: 133.33333%;
  }
  
  ::ng-deep .mat-form-field-wrapper {
    margin-bottom: -1em;
    margin-top: -0.2em;
  }
  
  ::ng-deep .mat-form-field-wrapper {
    margin-bottom: -1em !important;
    margin-top: -0.2em !important;
  }
  
  /* .mat-card {
    margin-top: 5px !important;
  } */
  
  
  ::ng-deep .mat-form-field-flex > .mat-form-field-infix {
    padding: 0.4em 0px !important;
  }
  
  ::ng-deep .mat-form-field-label-wrapper {
    top: -1em !important;
  }
  
  .wide-textarea {
    width: 100%;
  }
  
  #userMessage {
    text-align: center !important;
    font-size: 14px;
    font-family: 900;
  }
  
  .input-with-button {
    display: flex;
    align-items: center;
  }
  
  .input-with-button input {
    margin-right: 8px; /* Adjust the spacing between the input and button as needed */
  }
  .container {
    width: 100%;
    max-width: 1200px; /* Adjust the maximum width as needed */
    margin: 0 auto;
  }
  
  .input-with-button {
    display: flex;
    align-items: center;
  }
  
  
  
  @media (max-width: 768px) {
    .container-fluid {
      flex-direction: column;
      align-items: center;
    }
  
    .col-3 {
      width: 100%;
    }
  }
  ::ng-deep .mat-tooltip {
    background-color: red !important; /* Set the background color to red */
    color: white !important; /* Set the text color to white */
    max-height: 22px !important;
    line-height: 10px;
  }
  .custom-disabled-button {
    background-color: #ffc107 !important; /* Set the desired color for the disabled button */
    color: rgb(125, 117, 117) !important;
  }
  /* Add this to your styles.css or styles.scss file */
  
  
  .blur-text {
    filter: blur(4px);  /* Adjust blur strength as needed */
  }
  
  .toggle-button {
    background: none;
    border: none;
    cursor: pointer;
  }
  
  
  .custom-border {
    border: 1px solid;
    /* background-color: lemonchiffon; */
    border-radius: 3px;
  }
  
  
  /* .naija-flag {
    display: flex;
  }
  .first-green {
    height: 100px;
    width: 60px;
    background-color: green;
  }
  .white {
    height: 100px;
    width: 60px;
    background-color: white;
  }
  .second-green {
    height: 100px;
    width: 60px;
    background-color: green;
  } */
  .red {
    border: 1px solid red; /* Set your desired red color */
  }
  .gradeint1{
    background: linear-gradient(to right, rgb(175, 216, 202), rgb(135, 196, 183));
  
  }
  
  .matfield{
    margin-top: 6px !important;
  }
  
  .small-label {
    font-size: smaller;
  }
  /* Sticky header styles */
.autocomplete-header {
  display: flex;
  position: sticky;
  top: 0;
  background-color: #ffffff;
  z-index: 2;
  font-weight: bold;
  padding: 6px 10px;
  border-bottom: 1px solid #ccc;
  white-space: nowrap;
  font-size: 13px;
}

/* Option rows */
.autocomplete-row {
  display: flex;
  white-space: nowrap;
  min-width: 600px;
  padding: 6px 10px;
  font-size: 10px;
}

/* Alternating colors */
::ng-deep .mat-autocomplete-panel mat-option:nth-child(even) .autocomplete-row {
  background-color: #f9f9f9;
  overflow-y: auto;
}

::ng-deep .mat-autocomplete-panel mat-option:nth-child(odd) .autocomplete-row {
  background-color: #ffffff;
  overflow-y: auto;
}

/* Custom hover & focus background */
::ng-deep .mat-autocomplete-panel mat-option:hover:not(.mat-selected) .autocomplete-row,
::ng-deep .mat-autocomplete-panel mat-option.mat-active .autocomplete-row {
  background-color: #5b6acefe !important; /* Light blue */
  color: #000;
  overflow-y: auto;
}

/* Prevent default dark blue selection */
::ng-deep .mat-autocomplete-panel mat-option.mat-selected {
  background-color: #dbeafe !important; /* Light blue selection */
  color: #000 !important;
  overflow-y: auto;
}

/* Column styles */
.col-code,
.col-name,
.col-phone {
  padding-right: 12px;
  flex: 1;
  min-width: 100px;
  overflow: hidden;
  text-overflow: ellipsis;
}

/* Panel styling */
::ng-deep .mat-autocomplete-panel {
  max-height: 300px;
  overflow-y: auto important;
  overflow-x: auto !important;
  min-width: 600px;
  white-space: nowrap !important;
  font-family: Arial, sans-serif;
  border: 1px solid #ddd;
  box-shadow: 0px 4px 8px rgba(0,0,0,0.1);
}
.form-row {
  display: flex;
  gap: 16px; /* Adjust spacing between fields */
  align-items: flex-start;
}

.form-field {
  flex: 1; /* Equal width for all fields */
  min-width: 0; /* Prevents overflow */
}

/* Responsive - stack on mobile */
@media (max-width: 768px) {
  .form-row {
    flex-direction: column;
  }
}


.pricing-row {
    display: flex;
    align-items: center;
    height: 30px;
    border-bottom: 1px solid #f0f0f0;
    padding: 4px 0;
}

.pricing-row:last-child {
    border-bottom: none;
}

.pricing-label {
    flex: 0 0 80px;
    font-weight: 500;
    color: #333;
    text-align: left;
    padding-right: 16px;
    font-size: 14px;
}

.pricing-field {
    flex: 1;
    min-width: 0;
}

.pricing-field mat-form-field {
    width: 100%;
}

/* Special styling for calculated fields */
.total-row,
.gst-row,
.payable-row {
    border-top: 1px solid #e0e0e0;
    margin-top: 4px;
    padding-top: 8px;
    background-color: #f9f9f9;
}

.payable-row {
    border-top: 2px solid #333;
    font-weight: bold;
    /* background-color: #e3f2fd; */
}

.payable-row .pricing-label {
    font-weight: bold;
    color: #1976d2;
}

/* Input styling for readonly fields */
.total-row ::ng-deep .mat-form-field-appearance-outline .mat-form-field-infix,
.gst-row ::ng-deep .mat-form-field-appearance-outline .mat-form-field-infix,
.payable-row ::ng-deep .mat-form-field-appearance-outline .mat-form-field-infix {
    /* background-color: #f5f5f5; */
}

/* Remove mat-label from pricing fields since we have external labels */
.pricing-field ::ng-deep .mat-form-field-label {
    display: none;
}

/* Adjust form field padding */
.pricing-field ::ng-deep .mat-form-field-appearance-outline .mat-form-field-infix {
    padding: 12px 14px;
}
.pricing-container {
  max-width: 160px;
  padding: 8px;
  border-radius: 12px;
  /* box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15); */
  font-family: Arial, sans-serif;
  display: flex;
  flex-direction: column;
  gap: 8px;
  margin-top: 16px;
  align-items: right;
  margin-left: auto;
  margin-right: auto;
  
}

.pricing-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0px; /* Less vertical space between rows */
}

.pricing-label {
  flex: 0 0 40%;
  font-weight: 500;
  font-size: 14px;
}

.pricing-field {
  flex: 0 0 50%;
}

.compact-form-field {
  width: 100%;
  margin: 0;
}

.compact-form-field .mat-form-field-wrapper {
  padding: 0 !important;
  margin: 0 !important;
}

.compact-form-field .mat-form-field-flex {
  height: 32px;
  min-height: 32px;
}

.compact-form-field .mat-input-element {
  padding: 4px 4px;
  font-size: 9px;
  height: 10px;
  line-height: 10px;
}

.compact-form-field .mat-form-field-infix {
  padding: 0px !important;
}

.total-row, .gst-row, .payable-row {
  background-color: #f8f8f8;
  border-radius: 4px;
  font-weight: bold;
}

.payable-row .pricing-label {
  color: #007bff;
}
